{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"namePrefix": {
			"type": "string"
		},
		"domainName": {
			"type": "string"
		},
		"adminUsername": {
			"type": "string"
		},
		"adminPassword": {
			"type": "securestring"
		},
		"storageAccountType": {
			"type": "securestring"
		},
		"nicSubnetUri": {
			"type": "string"
		},
		"vmSize": {
			"type": "string"
		},
		"vmCount": {
			"type": "int",
			"defaultValue": 3
		},
		"vmDiskSize": {
			"type": "int",
			"defaultValue": 1023
		},
		"vmDiskCount": {
			"type": "int",
			"defaultValue": 2
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "MicrosoftWindowsServer"
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "WindowsServer"
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "2016-Datacenter"
		},
		"imageVersion": {
			"type": "string",
			"defaultValue": "latest"
		},
		"_artifactsLocation": {
			"type": "string"
		},
		"_artifactsLocationSasToken": {
			"type": "string"
		}
	},
	"variables": {
		"apiVersion": "2015-01-01",
		"apiVersionNetworks": "2015-06-15",
		"apiVersionVirtualMachines": "2015-06-15",
		"apiVersionVMExtensions": "2015-06-15",
		"apiVersionStorage": "2015-06-15",
		"storageNamePrefix": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'vm')]",
		"witnessStorageName": "[concat(parameters('namePrefix'),uniqueString(resourceGroup().id),'cw')]",
		"witnessStorageType": "Standard_LRS",
		"vmNamePrefix": "[concat(parameters('namePrefix'),'-s2d-')]",
		"vmAvailabilitySetName": "[concat(variables('vmNamePrefix'),'as')]",
		"clusterName": "[concat(variables('vmNamePrefix'),'c')]",
		"sofsName": "[concat(variables('vmNamePrefix'),'fs')]",
		"shareName": "data",
		"vhdContainerName": "vhds",
		"vmLoopTemplateURL": "[concat(parameters('_artifactsLocation'),'/nested/newVM.json',parameters('_artifactsLocationSasToken'))]",
		"s2dPrepModulesURL": "[concat(parameters('_artifactsLocation'),'/scripts/prep-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
		"s2dPrepFunction": "PrepS2D.ps1\\PrepS2D",
		"s2dConfigModulesURL": "[concat(parameters('_artifactsLocation'),'/scripts/config-s2d.ps1.zip',parameters('_artifactsLocationSasToken'))]",
		"s2dConfigFunction": "ConfigS2D.ps1\\ConfigS2D"
	},
	"resources": [
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('vmAvailabilitySetName')]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"location": "[resourceGroup().location]",
			"properties": {}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[variables('witnessStorageName')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[variables('witnessStorageType')]"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('storageNamePrefix'),copyindex())]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"copy": {
				"name": "storageAccountLoop",
				"count": "[parameters('vmCount')]"
			},
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},
		{
			"name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"copy": {
				"name": "nicLoop",
				"count": "[parameters('vmCount')]"
			},
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							}
						}
					}
				]
			}
		},
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion')]",
            "copy": {
                "name": "virtualMachineLoop",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat(variables('vmNamePrefix'),copyindex(),'-newVM')]",
			"dependsOn": [
				"storageAccountLoop",
				"nicLoop",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
			],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmLoopTemplateURL')]"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(variables('vmNamePrefix'), copyindex())]"
                    },
                    "storageAccountUri": {
                        "value": "[reference(concat('Microsoft.Storage/storageAccounts/',variables('StorageNamePrefix'),copyIndex()),variables('apiVersionStorage')).primaryEndpoints.blob]"
                    },
                    "vmAvailabilitySetName": {
                        "value": "[variables('vmAvailabilitySetName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "vmDiskCount": {
                        "value": "[parameters('vmDiskCount')]"
                    },
                    "vmDiskSize": {
                        "value": "[parameters('vmDiskSize')]"
                    },
					"vhdContainerName": {
						"value": "[variables('vhdContainerName')]"
					},
                    "domainName": {
                        "value": "[parameters('domainName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
					"imagePublisher": {
						"value": "[parameters('imagePublisher')]"
					},
					"imageOffer": {
						"value": "[parameters('imageOffer')]"
					},
					"imageSKU": {
						"value": "[parameters('imageSKU')]"
					},
					"imageVersion": {
						"value": "[parameters('imageVersion')]"
					}
                }
            }
        },
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmNamePrefix'),string(add(copyindex(),1)),'/s2dPrep')]",
			"apiVersion": "[variables('apiVersionVMExtensions')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"virtualMachineLoop"
			],
			"copy": {
				"name": "virtualMachineExtensionLoop",
				"count": "[sub(parameters('vmCount'),1)]"
			},
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "2.20",
				"autoUpgradeMinorVersion": false,
				"settings": {
					"modulesUrl": "[variables('s2dPrepModulesURL')]",
					"configurationFunction": "[variables('s2dPrepFunction')]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"adminCreds": {
							"userName": "[parameters('adminUserName')]",
							"password": "PrivateSettingsRef:adminPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]"
					}
				}
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('vmNamePrefix'),'0/s2dConfig')]",
			"apiVersion": "[variables('apiVersionVMExtensions')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"virtualMachineLoop",
				"virtualMachineExtensionLoop",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('witnessStorageName'))]"				
			],
			"properties": {
				"publisher": "Microsoft.Powershell",
				"type": "DSC",
				"typeHandlerVersion": "2.20",
				"autoUpgradeMinorVersion": false,
				"settings": {
					"modulesUrl": "[variables('s2dConfigModulesURL')]",
					"configurationFunction": "[variables('s2dConfigFunction')]",
					"properties": {
						"domainName": "[parameters('domainName')]",
						"clusterName": "[variables('clusterName')]",
						"sofsName": "[variables('sofsName')]",
						"shareName": "[variables('shareName')]",
						"vmNamePrefix": "[variables('vmNamePrefix')]",
						"vmCount": "[parameters('vmCount')]",
						"vmDiskSize": "[parameters('vmDiskSize')]",
						"witnessStorageName": "[variables('witnessStorageName')]",
						"witnessStorageKey": "PrivateSettingsRef:witnessStorageKey",
						"adminCreds": {
							"userName": "[parameters('adminUserName')]",
							"password": "PrivateSettingsRef:adminPassword"
						}
					}
				},
				"protectedSettings": {
					"items": {
						"adminPassword": "[parameters('adminPassword')]",
						"witnessStorageKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts',variables('witnessStorageName')),variables('apiVersionStorage')).keys[0].value]"
					}
				}
			}
		}
	],
	"outputs": {}
}