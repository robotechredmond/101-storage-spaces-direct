{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",

  "parameters": {

    "namePrefix": {
      "type": "string"
    },

		"domainName": {
      "type": "string"
    },

		"dnsServerName": {
      "type": "string"
    },

    "adminUsername": {
      "type": "string"
    },

    "adminPassword": {
      "type": "securestring"
    },

    "storageAccountType": {
      "type": "securestring"
    },

		"dnsServerName": {
      "type": "string"
    },

		"nicSubnetUri": {
      "type": "string"
    },

    "vmSize": {
      "type": "string"
    },

		"assetLocation": {
      "type": "string"
    },

    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer"
    },

    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer"
    },

    "imageSKU": {
      "type": "string",
      "defaultValue": "2016-Datacenter"
    },

    "imageVersion": {
      "type": "string",
      "defaultValue": "latest"
    }

  },

  "variables": {

    "apiVersion": "2015-01-01",
    "apiVersionNetworks": "2015-06-15",
    "apiVersionVirtualMachines": "2015-06-15",
    "apiVersionVMExtensions": "2015-06-15",
    "apiVersionStorage": "2015-06-15",

		"vmDiskSize": 1000,
	
    "vmNamePrefix": "[concat(parameters('namePrefix'),'-s2d-')]",
		"vmAvailabilitySetName": "[concat(variables('vmNamePrefix'),'as')]",
		"vmCount": 3,

		"clusterName": "[concat(variables('vmNamePrefix'),'c')]",
    "sofsName":"[concat(variables('vmNamePrefix'),'sofs')]",
		"shareName": "data",

		"storageAccountPrefix": "[concat(uniqueString(subscription().subscriptionId),parameters('namePrefix'),'sa')]",
    "vhdContainerName": "vhds",

		"s2dPrepModulesURL":"[concat(parameters('assetLocation'),'/scripts/prep-s2d.ps1.zip')]",
    "s2dPrepFunction": "PrepS2D.ps1\\PrepS2D",

		"s2dConfigModulesURL":"[concat(parameters('assetLocation'),'/scripts/config-s2d.ps1.zip')]",
    "s2dConfigFunction": "ConfigS2D.ps1\\ConfigS2D"

  },

  "resources": [

		{
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('vmAvailabilitySetName')]",
      "apiVersion": "[variables('apiVersionNetworks')]",
      "location": "[resourceGroup().location]"
    },

    {
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[concat(variables('storageAccountPrefix'), copyindex())]",
      "apiVersion": "[variables('apiVersionStorage')]",
      "copy": {
				"name": "storageAccountLoop",
				"count": "[variables('vmCount')]"
			},
			"location": "[resourceGroup().location]",
			"properties": {
				"accountType": "[parameters('storageAccountType')]"
			}
		},

    {
			"name": "[concat(variables('vmNamePrefix'), copyindex(), '-nic')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[resourceGroup().location]",
			"apiVersion": "[variables('apiVersionNetworks')]",
			"copy": {
				"name": "nicLoop",
				"count": "[variables('vmCount')]"
			},
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[parameters('nicSubnetUri')]"
							}
						}
					}
				]
			}
		},

    {
			"apiVersion": "[variables('apiVersionVirtualMachines')]",
			"type": "Microsoft.Compute/virtualMachines",
			"name": "[concat(variables('vmNamePrefix'), copyindex())]",
			"location": "[resourceGroup().location]",
			"copy": {
				"name": "virtualMachineLoop",
				"count": "[variables('vmCount')]"
			},
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts',concat(variables('storageAccountPrefix'),  copyindex()))]",
				"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNamePrefix'), copyindex(), '-nic'))]",
				"[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"availabilitySet": {
					"id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmAvailabilitySetName'))]"
				},
				"osProfile": {
					"computerName": "[concat(variables('vmNamePrefix'), copyindex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[parameters('imagePublisher')]",
						"offer": "[parameters('imageOffer')]",
						"sku": "[parameters('imageSKU')]",
						"version": "[parameters('imageVersion')]"
					},
					"osDisk": {
						"name": "[concat(variables('vmNamePrefix'), copyindex(), '-osdisk.vhd')]",
						"vhd": {
							"uri": "[concat('http://',variables('storageAccountPrefix'), copyindex(), '.blob.core.windows.net/', variables('vhdContainerName'), '/', variables('vmNamePrefix'), copyindex(), '-osdisk.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					},
					"dataDisks": [
						{
							"vhd": {
								"uri": "[concat('http://',variables('storageAccountPrefix'), copyindex(), '.blob.core.windows.net/', variables('vhdContainerName'), '/', variables('vmNamePrefix'), copyindex(), '-datadisk1.vhd')]"
							},
							"name": "[concat(variables('vmNamePrefix'), copyindex(), '-datadisk1.vhd')]",
							"caching" : "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('vmDiskSize')]",
							"lun": 0
						},
						{
							"vhd": {
								"uri": "[concat('http://',variables('storageAccountPrefix'), copyindex(), '.blob.core.windows.net/', variables('vhdContainerName'), '/', variables('vmNamePrefix'), copyindex(), '-datadisk2.vhd')]"
							},
							"name": "[concat(variables('vmNamePrefix'), copyindex(), '-datadisk2.vhd')]",
							"caching" : "None",
							"createOption": "Empty",
							"diskSizeGB": "[variables('vmDiskSize')]",
							"lun": 1
						}
					]
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNamePrefix'), copyindex(), '-nic'))]"
						}
					]
				}
			}
		},	

		{
     	"type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),string(add(copyindex(),1)),'/s2dPrep')]",
      "apiVersion": "[variables('apiVersionVMExtensions')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',concat(variables('vmNamePrefix'),string(add(copyindex(),1))))]"
      ],
			"copy": {
				"name": "virtualMachineExtensionLoop",
				"count": "[sub(variables('vmCount'),1)]"
			},
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
		    "autoUpgradeMinorVersion": false,
        "settings": {
		  		"modulesUrl": "[variables('s2dPrepModulesURL')]",
          "configurationFunction": "[variables('s2dPrepFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    },

		{
     	"type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmNamePrefix'),'0/s2dConfig')]",
      "apiVersion": "[variables('apiVersionVMExtensions')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
				"[resourceId('Microsoft.Compute/virtualMachines',concat(variables('vmNamePrefix'),'0'))]",
				"[resourceId('Microsoft.Compute/virtualMachines/extensions',concat(variables('vmNamePrefix'),string(variables('vmCount')),'/s2dPrep'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.20",
		    "autoUpgradeMinorVersion": false,
        "settings": {
		  		"modulesUrl": "[variables('s2dConfigModulesURL')]",
          "configurationFunction": "[variables('s2dConfigFunction')]",
          "properties": {
            "domainName": "[parameters('domainName')]",
						"clusterName": "[variables('clusterName')]",
						"sofsName": "[variables('sofsName')]",
						"shareName": "[variables('shareName')]",
						"vmNamePrefix": "[variables('vmNamePrefix')]",
						"vmCount": "[variables('vmCount')]",
						"vmDiskSize": "[variables('vmDiskSize')]",
            "adminCreds": {
              "userName": "[parameters('adminUserName')]",
              "password": "PrivateSettingsRef:adminPassword"
            }
          }
        },
        "protectedSettings": {
          "items": {
            "adminPassword": "[parameters('adminPassword')]"
          }
        }
      }
    }

  ],

  "outputs": {
  }

}
